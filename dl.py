# -*- coding: utf-8 -*-
"""dl.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FLzL0KiNU_Vm3777xVYCIBZmVTsF9oyJ
"""

!pip install tensorflow

import tensorflow as tf
from tensorflow import keras
from sklearn.model_selection import train_test_split
from tensorflow.keras import layers
from sklearn.metrics import mean_squared_error
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
import csv
import random
import statistics
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

File = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTdOLcbAcUihTHfSg7vnnV7zsxo29btaN_Dn3OhiVhR1BXGcRtV2bJlZCHsGpYvgwacvB01XI51GAOs/pub?gid=56675948&single=true&output=csv"

data = pd.read_csv(File)
data

feature_cols = ['Year', 'Department_LabelEncoded','Self','University', 'homework']
X = data[feature_cols] # Features
y = data.GPA # Target variable
X

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.10, random_state=42)

# นำเข้าข้อมูล (features และ labels)

# สร้างโมเดล Sequential
model = keras.Sequential()

# เพิ่มชั้น Dense (Fully Connected Layer) แรก
model.add(layers.Dense(128, activation='relu', input_shape=(5,)))

# เพิ่มชั้น Dense สอง
model.add(layers.Dense(64, activation='relu'))

# เพิ่มชั้น Output ที่มีหนึ่งเซลล์ (เพราะเป็นการทำนายค่า GPA เดียว)
model.add(layers.Dense(1))

# คอมไพล์โมเดล
model.compile(optimizer='adam', loss='mean_squared_error')

# ฝึกโมเดลด้วยข้อมูลฝึก
model.fit(X_train, y_train, epochs=100, batch_size=32)

# ทำนายค่า GPA จากข้อมูลทดสอบ
y_pred = model.predict(X_test)

# คำนวณ Mean Squared Error (MSE) เพื่อประเมินความแม่นยำของโมเดล
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# คำนวณค่าความแม่นยำของโมเดล
accuracy = 1 - mse  # ความแม่นยำเท่ากับ 1 ลบ MSE
print("Accuracy:", accuracy)

y_pred

# Calculate the evaluation metrics
r2_value = r2_score(y_test, y_pred)
# คำนวณค่าความแม่นยำ
print("R-squared (R2):", r2_value)
mean_absolute = mean_absolute_error(y_test, y_pred)
print("Mean Absolute Error (MAE):", mean_absolute)
mean_squared = mean_squared_error(y_test, y_pred)
print("Mean Squared Error (MSE):", mean_squared)
accuracy = 1 - mean_squared
print("Accuracy: ", accuracy)

# Create a scatter plot of actual vs. predicted values
plt.figure(figsize=(8, 6))
plt.plot(y_test.values, label='Actual')
plt.plot(y_pred, label='Predicted')
plt.xlabel("Data point")
plt.ylabel("Predicted GPA")
plt.title("Actual vs Predicted GPA")
#plt.plot(y_test, y_test, color='red', label='Predicted')
plt.legend()
plt.grid(True)
plt.show()